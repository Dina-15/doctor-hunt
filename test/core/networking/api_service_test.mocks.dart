// Mocks generated by Mockito 5.4.4 from annotations
// in doctor_hunt/test/core/networking/api_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:doctor_hunt/core/networking/api_service.dart' as _i4;
import 'package:doctor_hunt/features/login/data/models/login_request_body.dart'
    as _i6;
import 'package:doctor_hunt/features/login/data/models/login_response.dart'
    as _i2;
import 'package:doctor_hunt/features/sign_up/data/models/sign_up_request_body.dart'
    as _i7;
import 'package:doctor_hunt/features/sign_up/data/models/sign_up_response.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignUpResponse_1 extends _i1.SmartFake
    implements _i3.SignUpResponse {
  _FakeSignUpResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponse> login(_i6.LoginRequestBody? loginRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequestBody],
        ),
        returnValue: _i5.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [loginRequestBody],
          ),
        )),
      ) as _i5.Future<_i2.LoginResponse>);

  @override
  _i5.Future<_i3.SignUpResponse> signUp(
          _i7.SignUpRequestBody? signUpRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [signUpRequestBody],
        ),
        returnValue: _i5.Future<_i3.SignUpResponse>.value(_FakeSignUpResponse_1(
          this,
          Invocation.method(
            #signUp,
            [signUpRequestBody],
          ),
        )),
      ) as _i5.Future<_i3.SignUpResponse>);
}
